/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei"
import { useFrame } from "@react-three/fiber"
import { MutableRefObject, useRef } from "react"
import * as THREE from "three"
import { Group, Mesh } from "three"
import { GLTF } from "three-stdlib"

type GLTFResult = GLTF & {
	nodes: {
		PaperClipMesh: THREE.Mesh
	}
	materials: {
		PaperClip: THREE.MeshStandardMaterial
	}
}

const PaperClip = ({ ...props }: JSX.IntrinsicElements["group"]) => {
	const paperClipMesh: MutableRefObject<Mesh | null> | undefined = useRef(null)
	const { nodes, materials } = useGLTF("/models/paperClip.glb") as GLTFResult

	useFrame(({ clock }) => {
		if (paperClipMesh.current) {
			//@ts-ignore
			paperClipMesh.current.material.color = {
				isColor: true,
				b: 0,
				g: 0,
				r: 1,
			}
			paperClipMesh.current.rotation.x += 0.02
			paperClipMesh.current.position.set(Math.sin(clock.getElapsedTime()) * 0.1, 0, 0)
		}
	})
	return (
		<group {...props} dispose={null} rotation={[-Math.PI / 2, -Math.PI / 2, 0]} position={[0, 1, -3]}>
			<mesh ref={paperClipMesh} geometry={nodes.PaperClipMesh.geometry} material={materials.PaperClip} scale={0.1} />
			{/* <meshStandardMaterial attach="material" color="red" /> */}
		</group>
	)
}

export default PaperClip

useGLTF.preload("/models/paperClip.glb")
